module.exports=function(e){var s={};function t(o){if(s[o])return s[o].exports;var r=s[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=s,t.d=function(e,s,o){t.o(e,s)||Object.defineProperty(e,s,{configurable:!1,enumerable:!0,get:o})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(s,"a",s),s},t.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},t.p="",t(t.s=2)}([function(e,s){e.exports=require("axios")},function(e,s){e.exports=require("set-cookie-parser")},function(e,s,t){"use strict";t.r(s);var o=t(0),r=t.n(o),n=t(1),i=t.n(n);class a{constructor(e){this.env={JWT_COOKIE:e.JWT_COOKIE||"TKN",XSRF_COOKIE:e.XSRF_HEADER||"XSRF-TOKEN",IS_DEV:"development"===(e.NODE_ENV||"production"),COOKIE_DOMAIN:e.COOKIE_DOMAIN||"localhost"}}setResponseCookies(e,s){let t=i.a.parse(s);for(let s of t){const t=s.name===this.env.XSRF_COOKIE;e.cookie(s.name,s.value,{path:s.path,secure:!this.env.IS_DEV,httpOnly:!t,sameSite:t,domain:this.env.COOKIE_DOMAIN})}}setJwtCookie(e,s){e.cookie(this.env.JWT_COOKIE,s,{path:"/",domain:this.env.COOKIE_DOMAIN,secure:!this.env.IS_DEV,httpOnly:!0})}clearJwtCookie(e){e.clearCookie(this.env.JWT_COOKIE,{path:"/",domain:this.env.COOKIE_DOMAIN})}cookiesToHeaders(e){return{"X-XSRF-TOKEN":e[this.env.XSRF_COOKIE]||"",Cookie:"PHPSESSID="+e.PHPSESSID||""}}getFormId(e){return e.vars&&(e=e.vars),"form_"+(e.id||e.attr.id)}}t.d(s,"default",function(){return u});class u{constructor(e){this.env=e,this.utilities=new a(this.env),this.logging="development"===e.NODE_ENV}login(e,s=null){let t=e.session,o=e.body._action;"/"!==o.substr(0,1)&&(o="/"+o);const n=this.env.API_URL+o;return this.logging&&console.log("login posting to: "+n),r.a.post(n,{username:e.body.username,password:e.body.password},{headers:this.utilities.cookiesToHeaders(e.cookies)}).then(e=>{if(this.logging&&console.error(e),t.authToken=e.data.token,t.refreshToken=e.data.refresh_token,this.utilities.setJwtCookie(s,t.authToken),this.utilities.setResponseCookies(s,e),!s)return t.authToken;s.status(200).json({token:t.authToken})}).catch(e=>{if(this.logging&&console.error(e),!s)return e;e.response?401===e.response.status?s.status(401).json(e.response.data):s.status(e.response.status).json({message:e.response.data?e.response.data.error&&e.response.data.error.exception?e.response.data.error.exception[0].message:e.response.data.message:e.message}):s.status(500).json({message:e.message})})}logout(e,s){e.session.authToken=null,e.session.destroy(),this.utilities.clearJwtCookie(s),s.status(200).json({success:!0})}async jwtRefresh(e,s,t=!0){let o,n=e.session;n.refreshToken||(this.utilities.clearJwtCookie(s),o="Invalid session - no refresh token available",this.logging&&console.log(o),s.status(400).json({message:o}));const i=this.env.API_URL+"/token/refresh";try{let o=await r.a.post(i,{refresh_token:n.refreshToken},{headers:this.utilities.cookiesToHeaders(e.cookies),refreshTokenRequest:!0});this.logging&&console.error("jwtRefresh response",o);const a=o.data;if(n.authToken=a.token,n.refreshToken=a.refresh_token,this.utilities.setJwtCookie(s,n.authToken),!t)return n.authToken;s.status(200).json({token:n.authToken})}catch(e){if(this.logging&&console.error("RefreshToken Error",e),this.utilities.clearJwtCookie(s),!t)throw new Error(e);if(s.status(500),void 0===e.response)return void s.json({message:e.message||e});if(void 0===e.response.data)return void s.json({message:e});let o=e.response.data.error&&e.response.data.error.exception?e.response.data.error.exception[0].message:e.response.data.message||"unknown error";return s.json({message:"Refresh token rejected",error:o})}}}}]);